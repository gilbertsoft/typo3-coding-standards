name: Create Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Prerelease'
        required: false
        default: true
        type: boolean

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: intl, zip
          ini-values: memory_limit=-1
          php-version: latest
          tools: composer

      - name: Create release draft
        id: version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: release-drafter/release-drafter@v5
        with:
          prerelease: ${{ inputs.prerelease }}
          commitish: ${{ github.ref }}
          disable-autolabeler: true

      - name: Print calculated version
        env:
          VERSION_OUTPUTS: ${{ toJSON(steps.version.outputs) }}
        run: |
          echo "$VERSION_OUTPUTS"

      - name: Add release commit
        run: |
          composer set-version ${{ steps.version.outputs.tag_name }}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[RELEASE] ${{ steps.version.outputs.name }}"
          git push

      - name: Create release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: release-drafter/release-drafter@v5
        with:
          publish: true
          prerelease: ${{ inputs.prerelease }}
          commitish: ${{ github.ref }}
          disable-autolabeler: true

      - name: Create next release draft
        id: next
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: release-drafter/release-drafter@v5
        with:
          prerelease: true
          commitish: ${{ github.ref }}
          header: "!!! Draft - will be overwritten with the next release !!!\n\n"
          disable-autolabeler: true

      - name: Print calculated version
        env:
          VERSION_OUTPUTS: ${{ toJSON(steps.next.outputs) }}
        run: |
          echo "$VERSION_OUTPUTS"

      - name: Add version commit
        run: |
          composer set-version ${{ steps.next.outputs.tag_name }}
          git add .
          git commit -m "[TASK] Set TYPO3 Coding Standards version to ${{ steps.next.outputs.tag_name }}"
          git push
